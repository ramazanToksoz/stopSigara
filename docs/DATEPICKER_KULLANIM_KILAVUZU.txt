═══════════════════════════════════════════════════════════════════════════════
   📅 DATEPICKER COMPONENT KULLANIM KILAVUZU
═══════════════════════════════════════════════════════════════════════════════

Bu dosya, DatePicker componentinin detaylı kullanım kılavuzudur. DatePicker,
takvim görünümü ile tarih seçimi için kullanılır.

═══════════════════════════════════════════════════════════════════════════════
📋 İÇİNDEKİLER
═══════════════════════════════════════════════════════════════════════════════

1. Temel Kullanım
2. Props Listesi
3. Hazır Şablonlar
4. State Yönetimi
5. Min/Max Tarih Sınırlamaları
6. Dark Mode
7. Özelleştirme
8. Örnekler

═══════════════════════════════════════════════════════════════════════════════
1️⃣ TEMEL KULLANIM
═══════════════════════════════════════════════════════════════════════════════

import DatePicker from './components/DatePicker';
import { useState } from 'react';

const MyScreen = () => {
  const [selectedDate, setSelectedDate] = useState(new Date());
  
  return (
    <DatePicker 
      selectedDate={selectedDate}
      onDateSelect={setSelectedDate}
    />
  );
};

═══════════════════════════════════════════════════════════════════════════════
2️⃣ PROPS LİSTESİ
═══════════════════════════════════════════════════════════════════════════════

┌─────────────────────┬─────────────────────┬───────────────────────────────┐
│ Prop                │ Type                │ Default / Açıklama            │
├─────────────────────┼─────────────────────┼───────────────────────────────┤
│ selectedDate        │ Date                │ -                             │
│ onDateSelect        │ function            │ -                             │
│ minDate             │ Date                │ -                             │
│ maxDate             │ Date                │ -                             │
│ darkMode            │ boolean             │ false                         │
│ containerStyle      │ object              │ -                             │
└─────────────────────┴─────────────────────┴───────────────────────────────┘

═══════════════════════════════════════════════════════════════════════════════
3️⃣ HAZIR ŞABLONLAR
═══════════════════════════════════════════════════════════════════════════════

╔═══════════════════════════════════════════════════════════════════════════╗
║ ŞABLON 1: Basit Tarih Seçimi                                             ║
╚═══════════════════════════════════════════════════════════════════════════╝

import { useState } from 'react';
import DatePicker from './components/DatePicker';

const SimpleDatePicker = () => {
  const [date, setDate] = useState(new Date());
  
  return (
    <View>
      <DatePicker 
        selectedDate={date}
        onDateSelect={setDate}
      />
      
      <Text>Seçilen Tarih: {date.toLocaleDateString('tr-TR')}</Text>
    </View>
  );
};


╔═══════════════════════════════════════════════════════════════════════════╗
║ ŞABLON 2: Gelecek Tarih Seçimi (Min Date)                                ║
╚═══════════════════════════════════════════════════════════════════════════╝

const FutureDatePicker = () => {
  const [date, setDate] = useState(new Date());
  const today = new Date();
  
  return (
    <DatePicker 
      selectedDate={date}
      onDateSelect={setDate}
      minDate={today}  // Bugünden önceki tarihler seçilemez
    />
  );
};


╔═══════════════════════════════════════════════════════════════════════════╗
║ ŞABLON 3: Tarih Aralığı Sınırlı                                          ║
╚═══════════════════════════════════════════════════════════════════════════╝

const RangeDatePicker = () => {
  const [date, setDate] = useState(new Date());
  
  const minDate = new Date();
  const maxDate = new Date();
  maxDate.setDate(maxDate.getDate() + 30); // 30 gün sonrasına kadar
  
  return (
    <DatePicker 
      selectedDate={date}
      onDateSelect={setDate}
      minDate={minDate}
      maxDate={maxDate}
    />
  );
};


╔═══════════════════════════════════════════════════════════════════════════╗
║ ŞABLON 4: Modal ile Kullanım                                             ║
╚═══════════════════════════════════════════════════════════════════════════╝

import { Modal, View, TouchableOpacity, Text } from 'react-native';

const ModalDatePicker = () => {
  const [date, setDate] = useState(new Date());
  const [showPicker, setShowPicker] = useState(false);
  
  const handleDateSelect = (selectedDate) => {
    setDate(selectedDate);
    setShowPicker(false);
  };
  
  return (
    <View>
      <TouchableOpacity onPress={() => setShowPicker(true)}>
        <Text>Tarih Seç: {date.toLocaleDateString('tr-TR')}</Text>
      </TouchableOpacity>
      
      <Modal
        visible={showPicker}
        transparent={true}
        animationType="fade"
        onRequestClose={() => setShowPicker(false)}
      >
        <View style={styles.modalOverlay}>
          <DatePicker 
            selectedDate={date}
            onDateSelect={handleDateSelect}
          />
        </View>
      </Modal>
    </View>
  );
};

const styles = StyleSheet.create({
  modalOverlay: {
    flex: 1,
    backgroundColor: 'rgba(0, 0, 0, 0.5)',
    justifyContent: 'center',
    alignItems: 'center',
  },
});


╔═══════════════════════════════════════════════════════════════════════════╗
║ ŞABLON 5: Form ile Kullanım                                              ║
╚═══════════════════════════════════════════════════════════════════════════╝

const FormWithDatePicker = () => {
  const [formData, setFormData] = useState({
    name: '',
    quitDate: new Date(),
  });
  
  const handleDateChange = (date) => {
    setFormData(prev => ({
      ...prev,
      quitDate: date
    }));
  };
  
  return (
    <View>
      <Input 
        value={formData.name}
        onChangeText={(text) => setFormData(prev => ({ ...prev, name: text }))}
        placeholder="Adınız"
      />
      
      <Text style={styles.label}>Bırakma Tarihi:</Text>
      <DatePicker 
        selectedDate={formData.quitDate}
        onDateSelect={handleDateChange}
        minDate={new Date()}
      />
      
      <Button 
        text="Kaydet"
        onPress={() => console.log(formData)}
      />
    </View>
  );
};

═══════════════════════════════════════════════════════════════════════════════
4️⃣ STATE YÖNETİMİ
═══════════════════════════════════════════════════════════════════════════════

╔═══════════════════════════════════════════════════════════════════════════╗
║ Basit State                                                               ║
╚═══════════════════════════════════════════════════════════════════════════╝

const [date, setDate] = useState(new Date());

<DatePicker 
  selectedDate={date}
  onDateSelect={setDate}
/>


╔═══════════════════════════════════════════════════════════════════════════╗
║ Form State                                                                ║
╚═══════════════════════════════════════════════════════════════════════════╝

const [formData, setFormData] = useState({
  startDate: new Date(),
  endDate: null,
});

const handleStartDateChange = (date) => {
  setFormData(prev => ({
    ...prev,
    startDate: date
  }));
};

<DatePicker 
  selectedDate={formData.startDate}
  onDateSelect={handleStartDateChange}
/>


╔═══════════════════════════════════════════════════════════════════════════╗
║ Tarih Formatı                                                             ║
╚═══════════════════════════════════════════════════════════════════════════╝

const formatDate = (date) => {
  return date.toLocaleDateString('tr-TR', {
    day: '2-digit',
    month: 'long',
    year: 'numeric'
  });
};

// Kullanım
<Text>{formatDate(selectedDate)}</Text>
// Çıktı: "20 Mart 2025"

═══════════════════════════════════════════════════════════════════════════════
5️⃣ MIN/MAX TARİH SINIRLAM ALARI
═══════════════════════════════════════════════════════════════════════════════

╔═══════════════════════════════════════════════════════════════════════════╗
║ Sadece Gelecek Tarihler                                                  ║
╚═══════════════════════════════════════════════════════════════════════════╝

const today = new Date();

<DatePicker 
  selectedDate={date}
  onDateSelect={setDate}
  minDate={today}
/>


╔═══════════════════════════════════════════════════════════════════════════╗
║ Sadece Geçmiş Tarihler                                                   ║
╚═══════════════════════════════════════════════════════════════════════════╝

const today = new Date();

<DatePicker 
  selectedDate={date}
  onDateSelect={setDate}
  maxDate={today}
/>


╔═══════════════════════════════════════════════════════════════════════════╗
║ Belirli Tarih Aralığı                                                    ║
╚═══════════════════════════════════════════════════════════════════════════╝

const minDate = new Date('2025-01-01');
const maxDate = new Date('2025-12-31');

<DatePicker 
  selectedDate={date}
  onDateSelect={setDate}
  minDate={minDate}
  maxDate={maxDate}
/>


╔═══════════════════════════════════════════════════════════════════════════╗
║ Dinamik Tarih Aralığı (Önümüzdeki 30 Gün)                                ║
╚═══════════════════════════════════════════════════════════════════════════╝

const today = new Date();
const maxDate = new Date();
maxDate.setDate(today.getDate() + 30);

<DatePicker 
  selectedDate={date}
  onDateSelect={setDate}
  minDate={today}
  maxDate={maxDate}
/>

═══════════════════════════════════════════════════════════════════════════════
6️⃣ DARK MODE
═══════════════════════════════════════════════════════════════════════════════

// Light Mode
<DatePicker 
  selectedDate={date}
  onDateSelect={setDate}
  darkMode={false}  // Varsayılan
/>

// Dark Mode
<DatePicker 
  selectedDate={date}
  onDateSelect={setDate}
  darkMode={true}
/>

┌─────────────────────┬─────────────────────┬───────────────────────────────┐
│ Element             │ Light Mode          │ Dark Mode                     │
├─────────────────────┼─────────────────────┼───────────────────────────────┤
│ Background          │ White (#FFFFFF)     │ Gray/80 (#3C3E44)             │
│ Month Text          │ Gray/60 (#54565F)   │ Gray/5 (#F4F4F6)              │
│ Weekday Text        │ Gray/20 (#C5C8CE)   │ Gray/50 (#60646C)             │
│ Day Text            │ Gray/70 (#45454A)   │ Gray/5 (#F4F4F6)              │
│ Today Text          │ Brand/60 (#58B658)  │ Brand/60 (#58B658)            │
│ Selected BG         │ Brand/60 (#58B658)  │ Brand/60 (#58B658)            │
│ Selected Text       │ White (#FFFFFF)     │ White (#FFFFFF)               │
│ Disabled Text       │ #E8E9F1             │ Gray/50 (#60646C)             │
│ Arrow Icon          │ Gray/60 (#54565F)   │ Gray/5 (#F4F4F6)              │
└─────────────────────┴─────────────────────┴───────────────────────────────┘

═══════════════════════════════════════════════════════════════════════════════
7️⃣ ÖZELLEŞTİRME
═══════════════════════════════════════════════════════════════════════════════

╔═══════════════════════════════════════════════════════════════════════════╗
║ Container Stili                                                           ║
╚═══════════════════════════════════════════════════════════════════════════╝

<DatePicker 
  selectedDate={date}
  onDateSelect={setDate}
  containerStyle={{
    width: 350,
    backgroundColor: '#F5F5F5',
  }}
/>


╔═══════════════════════════════════════════════════════════════════════════╗
║ Merkeze Hizalama                                                          ║
╚═══════════════════════════════════════════════════════════════════════════╝

<View style={{ alignItems: 'center' }}>
  <DatePicker 
    selectedDate={date}
    onDateSelect={setDate}
  />
</View>

═══════════════════════════════════════════════════════════════════════════════
8️⃣ ÖRNEKLER
═══════════════════════════════════════════════════════════════════════════════

╔═══════════════════════════════════════════════════════════════════════════╗
║ ÖRNEK 1: Sigara Bırakma Tarihi Seçimi                                    ║
╚═══════════════════════════════════════════════════════════════════════════╝

const QuitDateSelection = () => {
  const [quitDate, setQuitDate] = useState(new Date());
  const today = new Date();
  
  const handleDateSelect = (date) => {
    setQuitDate(date);
    console.log('Bırakma tarihi:', date.toLocaleDateString('tr-TR'));
  };
  
  return (
    <View style={styles.container}>
      <Text style={styles.title}>Sigarayı Ne Zaman Bırakacaksın?</Text>
      
      <DatePicker 
        selectedDate={quitDate}
        onDateSelect={handleDateSelect}
        minDate={today}
      />
      
      <Text style={styles.info}>
        Seçilen Tarih: {quitDate.toLocaleDateString('tr-TR', {
          day: 'numeric',
          month: 'long',
          year: 'numeric'
        })}
      </Text>
      
      <Button 
        text="Devam Et"
        onPress={() => console.log('Quit date:', quitDate)}
      />
    </View>
  );
};


╔═══════════════════════════════════════════════════════════════════════════╗
║ ÖRNEK 2: Doğum Tarihi Seçimi                                             ║
╚═══════════════════════════════════════════════════════════════════════════╝

const BirthdateSelection = () => {
  const [birthdate, setBirthdate] = useState(new Date('2000-01-01'));
  
  const maxDate = new Date();
  maxDate.setFullYear(maxDate.getFullYear() - 18); // 18 yaş sınırı
  
  return (
    <View>
      <Text>Doğum Tarihiniz:</Text>
      <DatePicker 
        selectedDate={birthdate}
        onDateSelect={setBirthdate}
        maxDate={maxDate}
      />
    </View>
  );
};


╔═══════════════════════════════════════════════════════════════════════════╗
║ ÖRNEK 3: Randevu Tarihi Seçimi                                           ║
╚═══════════════════════════════════════════════════════════════════════════╝

const AppointmentPicker = () => {
  const [appointment, setAppointment] = useState(null);
  
  const today = new Date();
  const maxDate = new Date();
  maxDate.setDate(today.getDate() + 60); // 60 gün sonrasına kadar
  
  return (
    <View>
      <Text>Randevu Tarihi Seçin:</Text>
      <DatePicker 
        selectedDate={appointment || today}
        onDateSelect={setAppointment}
        minDate={today}
        maxDate={maxDate}
      />
      
      {appointment && (
        <Text>
          Randevu: {appointment.toLocaleDateString('tr-TR')}
        </Text>
      )}
    </View>
  );
};

═══════════════════════════════════════════════════════════════════════════════
🎨 TASARIM ÖZELLİKLERİ
═══════════════════════════════════════════════════════════════════════════════

BOYUTLAR:
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
• Width: 311px
• Height: ~302px (dinamik)
• Padding: 16px
• Border Radius: 16px
• Day Slot: 40x34px
• Day Slot Border Radius: 26px (selected)

TYPOGRAPHY:
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
Month Text:
• Font: DMSans-Medium
• Size: 13px
• Line Height: 16px
• Weight: 500

Weekday Text:
• Font: DMSans-Medium
• Size: 13px
• Line Height: 16px
• Weight: 500
• Color: Gray/20

Day Text:
• Font: DMSans-Medium
• Size: 14px
• Line Height: 20px
• Weight: 500

STATES:
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
Empty: #E8E9F1 (çok açık gri)
Normal: Gray/70 (#45454A)
Today: Brand/60 (#58B658) - yeşil
Selected: White text on Brand/60 background
Disabled: #E8E9F1 (tıklanamaz)

═══════════════════════════════════════════════════════════════════════════════
📝 ÖNEMLİ NOTLAR
═══════════════════════════════════════════════════════════════════════════════

1. ✅ Haftanın ilk günü Pazartesi (Monday-first)
2. ✅ Bugünün tarihi yeşil renkte gösterilir
3. ✅ Seçili tarih yeşil arka plan + beyaz yazı
4. ✅ Disabled tarihler açık gri ve tıklanamaz
5. ✅ Ay değiştirme ok butonları ile
6. ✅ Responsive design (size-matters)
7. ✅ Dark mode tam desteği
8. ⚠️  Arrow ikonları projeye eklenmiş olmalı

═══════════════════════════════════════════════════════════════════════════════
✅ ÖZET
═══════════════════════════════════════════════════════════════════════════════

1. DatePicker takvim görünümü ile tarih seçimi sağlar
2. Min/max tarih sınırlamaları destekler
3. Bugünün tarihi otomatik vurgulanır
4. Ay/yıl navigasyonu ok butonları ile
5. Dark mode destekler
6. Responsive tasarım (size-matters)
7. TouchableOpacity ile tıklanabilir günler
8. Disabled tarihler tıklanamaz

═══════════════════════════════════════════════════════════════════════════════
Son güncelleme: Ekim 2025
Versiyon: 1.0.0
═══════════════════════════════════════════════════════════════════════════════
