═══════════════════════════════════════════════════════════════════════════════
   📝 INPUT COMPONENT KULLANIM KILAVUZU
═══════════════════════════════════════════════════════════════════════════════

Bu dosya, Input componentinin detaylı kullanım kılavuzudur. Input componenti 
5 farklı tipte (default, password, phone, action, code) ve dark mode destekli
olarak kullanılabilir.

═══════════════════════════════════════════════════════════════════════════════
📋 İÇİNDEKİLER
═══════════════════════════════════════════════════════════════════════════════

1. Temel Kullanım
2. Input Tipleri
3. Props Listesi
4. Hazır Şablonlar
5. State Yönetimi
6. Dark Mode
7. Validation (Hata/Başarı)
8. Özelleştirme
9. Gerekli İkonlar

═══════════════════════════════════════════════════════════════════════════════
1️⃣ TEMEL KULLANIM
═══════════════════════════════════════════════════════════════════════════════

import Input from './components/Input';
import { useState } from 'react';

const MyScreen = () => {
  const [email, setEmail] = useState('');
  
  return (
    <Input 
      type="default"
      value={email}
      onChangeText={setEmail}
      placeholder="E-posta adresiniz"
      hasLeadingIcon={true}
      leadingIcon={require('./icons/sms.png')}
    />
  );
};

═══════════════════════════════════════════════════════════════════════════════
2️⃣ INPUT TİPLERİ
═══════════════════════════════════════════════════════════════════════════════

┌─────────────────────┬───────────────────────────────────────────────────┐
│ Type                │ Açıklama                                          │
├─────────────────────┼───────────────────────────────────────────────────┤
│ default             │ Standart text input (email, text, vb.)           │
│ password            │ Şifre inputu (göz ikonu ile göster/gizle)        │
│ phone               │ Telefon numarası (ülke kodu seçimi ile)          │
│ action              │ Sağda buton olan input (kod gönder, vb.)         │
│ code                │ OTP/Kod girişi (tek haneli)                      │
└─────────────────────┴───────────────────────────────────────────────────┘

═══════════════════════════════════════════════════════════════════════════════
3️⃣ PROPS LİSTESİ
═══════════════════════════════════════════════════════════════════════════════

╔═══════════════════════════════════════════════════════════════════════════╗
║ TEMEL PROPS                                                               ║
╚═══════════════════════════════════════════════════════════════════════════╝

┌─────────────────────┬─────────────────────┬───────────────────────────────┐
│ Prop                │ Type                │ Default / Açıklama            │
├─────────────────────┼─────────────────────┼───────────────────────────────┤
│ type                │ string              │ 'default'                     │
│ value               │ string              │ ''                            │
│ onChangeText        │ function            │ -                             │
│ placeholder         │ string              │ 'Enter text'                  │
│ editable            │ boolean             │ true                          │
└─────────────────────┴─────────────────────┴───────────────────────────────┘

╔═══════════════════════════════════════════════════════════════════════════╗
║ İKON PROPS                                                                ║
╚═══════════════════════════════════════════════════════════════════════════╝

┌─────────────────────┬─────────────────────┬───────────────────────────────┐
│ Prop                │ Type                │ Default / Açıklama            │
├─────────────────────┼─────────────────────┼───────────────────────────────┤
│ hasLeadingIcon      │ boolean             │ false                         │
│ leadingIcon         │ image source        │ -                             │
│ hasTrailingIcon     │ boolean             │ false                         │
│ trailingIcon        │ image source        │ -                             │
└─────────────────────┴─────────────────────┴───────────────────────────────┘

╔═══════════════════════════════════════════════════════════════════════════╗
║ PASSWORD PROPS                                                            ║
╚═══════════════════════════════════════════════════════════════════════════╝

┌─────────────────────┬─────────────────────┬───────────────────────────────┐
│ Prop                │ Type                │ Default / Açıklama            │
├─────────────────────┼─────────────────────┼───────────────────────────────┤
│ secureTextEntry     │ boolean             │ false                         │
│ showPasswordToggle  │ boolean             │ true                          │
└─────────────────────┴─────────────────────┴───────────────────────────────┘

╔═══════════════════════════════════════════════════════════════════════════╗
║ PHONE PROPS                                                               ║
╚═══════════════════════════════════════════════════════════════════════════╝

┌─────────────────────┬─────────────────────┬───────────────────────────────┐
│ Prop                │ Type                │ Default / Açıklama            │
├─────────────────────┼─────────────────────┼───────────────────────────────┤
│ countryCode         │ string              │ '+90'                         │
│ countryFlag         │ image source        │ -                             │
│ onCountryPress      │ function            │ -                             │
│ phonePrefix         │ string              │ ''                            │
└─────────────────────┴─────────────────────┴───────────────────────────────┘

╔═══════════════════════════════════════════════════════════════════════════╗
║ ACTION PROPS                                                              ║
╚═══════════════════════════════════════════════════════════════════════════╝

┌─────────────────────┬─────────────────────┬───────────────────────────────┐
│ Prop                │ Type                │ Default / Açıklama            │
├─────────────────────┼─────────────────────┼───────────────────────────────┤
│ actionText          │ string              │ 'Send'                        │
│ actionIcon          │ image source        │ -                             │
│ onActionPress       │ function            │ -                             │
│ actionDisabled      │ boolean             │ false                         │
└─────────────────────┴─────────────────────┴───────────────────────────────┘

╔═══════════════════════════════════════════════════════════════════════════╗
║ VALİDATİON PROPS                                                          ║
╚═══════════════════════════════════════════════════════════════════════════╝

┌─────────────────────┬─────────────────────┬───────────────────────────────┐
│ Prop                │ Type                │ Default / Açıklama            │
├─────────────────────┼─────────────────────┼───────────────────────────────┤
│ hasError            │ boolean             │ false                         │
│ hasSuccess          │ boolean             │ false                         │
└─────────────────────┴─────────────────────┴───────────────────────────────┘

╔═══════════════════════════════════════════════════════════════════════════╗
║ STYLE PROPS                                                               ║
╚═══════════════════════════════════════════════════════════════════════════╝

┌─────────────────────┬─────────────────────┬───────────────────────────────┐
│ Prop                │ Type                │ Default / Açıklama            │
├─────────────────────┼─────────────────────┼───────────────────────────────┤
│ darkMode            │ boolean             │ false                         │
│ containerStyle      │ object              │ -                             │
│ inputStyle          │ object              │ -                             │
└─────────────────────┴─────────────────────┴───────────────────────────────┘

╔═══════════════════════════════════════════════════════════════════════════╗
║ KEYBOARD PROPS                                                            ║
╚═══════════════════════════════════════════════════════════════════════════╝

┌─────────────────────┬─────────────────────┬───────────────────────────────┐
│ Prop                │ Type                │ Default / Açıklama            │
├─────────────────────┼─────────────────────┼───────────────────────────────┤
│ keyboardType        │ string              │ 'default'                     │
│ autoCapitalize      │ string              │ 'sentences'                   │
│ maxLength           │ number              │ -                             │
└─────────────────────┴─────────────────────┴───────────────────────────────┘

═══════════════════════════════════════════════════════════════════════════════
4️⃣ HAZIR ŞABLONLAR
═══════════════════════════════════════════════════════════════════════════════

╔═══════════════════════════════════════════════════════════════════════════╗
║ ŞABLON 1: Email Input (Default)                                          ║
╚═══════════════════════════════════════════════════════════════════════════╝

import { useState } from 'react';
import Input from './components/Input';

const [email, setEmail] = useState('');

<Input 
  type="default"
  value={email}
  onChangeText={setEmail}
  placeholder="E-posta adresiniz"
  keyboardType="email-address"
  autoCapitalize="none"
  hasLeadingIcon={true}
  leadingIcon={require('./icons/sms.png')}
  hasSuccess={email.includes('@')}
/>


╔═══════════════════════════════════════════════════════════════════════════╗
║ ŞABLON 2: Password Input                                                 ║
╚═══════════════════════════════════════════════════════════════════════════╝

const [password, setPassword] = useState('');

<Input 
  type="password"
  value={password}
  onChangeText={setPassword}
  placeholder="Şifreniz"
  hasLeadingIcon={true}
  leadingIcon={require('./icons/lock.png')}
  showPasswordToggle={true}
/>


╔═══════════════════════════════════════════════════════════════════════════╗
║ ŞABLON 3: Phone Number Input                                             ║
╚═══════════════════════════════════════════════════════════════════════════╝

const [phone, setPhone] = useState('');
const [selectedCountry, setSelectedCountry] = useState('TR');

const handleCountrySelect = () => {
  // Ülke seçim modalını aç
  console.log('Select country');
};

<Input 
  type="phone"
  value={phone}
  onChangeText={setPhone}
  placeholder="Telefon numaranız"
  countryCode="+90"
  countryFlag={require('./flags/tr.png')}
  onCountryPress={handleCountrySelect}
  phonePrefix="+90"
/>


╔═══════════════════════════════════════════════════════════════════════════╗
║ ŞABLON 4: Action Input (Kod Gönder)                                      ║
╚═══════════════════════════════════════════════════════════════════════════╝

const [code, setCode] = useState('');
const [isCodeSent, setIsCodeSent] = useState(false);

const handleSendCode = () => {
  // Kod gönderme işlemi
  console.log('Send code to:', code);
  setIsCodeSent(true);
};

<Input 
  type="action"
  value={code}
  onChangeText={setCode}
  placeholder="Doğrulama kodu"
  actionText="Gönder"
  actionIcon={require('./icons/tick-square.png')}
  onActionPress={handleSendCode}
  actionDisabled={code.length < 4}
/>


╔═══════════════════════════════════════════════════════════════════════════╗
║ ŞABLON 5: OTP Code Input (6 Haneli)                                      ║
╚═══════════════════════════════════════════════════════════════════════════╝

const [otp, setOtp] = useState(['', '', '', '', '', '']);
const inputRefs = useRef([]);

const handleOtpChange = (text, index) => {
  const newOtp = [...otp];
  newOtp[index] = text;
  setOtp(newOtp);
  
  // Otomatik bir sonraki input'a geç
  if (text && index < 5) {
    inputRefs.current[index + 1].focus();
  }
};

<View style={{ flexDirection: 'row', gap: 12 }}>
  {otp.map((digit, index) => (
    <Input 
      key={index}
      type="code"
      value={digit}
      onChangeText={(text) => handleOtpChange(text, index)}
      ref={(ref) => inputRefs.current[index] = ref}
    />
  ))}
</View>


╔═══════════════════════════════════════════════════════════════════════════╗
║ ŞABLON 6: Search Input                                                   ║
╚═══════════════════════════════════════════════════════════════════════════╝

const [search, setSearch] = useState('');

<Input 
  type="default"
  value={search}
  onChangeText={setSearch}
  placeholder="Ara..."
  hasLeadingIcon={true}
  leadingIcon={require('./icons/search.png')}
  hasTrailingIcon={search.length > 0}
  trailingIcon={require('./icons/close.png')}
/>

═══════════════════════════════════════════════════════════════════════════════
5️⃣ STATE YÖNETİMİ
═══════════════════════════════════════════════════════════════════════════════

╔═══════════════════════════════════════════════════════════════════════════╗
║ Form ile Kullanım                                                        ║
╚═══════════════════════════════════════════════════════════════════════════╝

import { useState } from 'react';

const LoginForm = () => {
  const [formData, setFormData] = useState({
    email: '',
    password: '',
  });
  
  const [errors, setErrors] = useState({
    email: false,
    password: false,
  });
  
  const handleChange = (field, value) => {
    setFormData(prev => ({
      ...prev,
      [field]: value
    }));
    
    // Validation
    if (field === 'email') {
      setErrors(prev => ({
        ...prev,
        email: !value.includes('@')
      }));
    }
  };
  
  const handleSubmit = () => {
    if (!errors.email && !errors.password) {
      console.log('Form submitted:', formData);
    }
  };
  
  return (
    <View>
      <Input 
        type="default"
        value={formData.email}
        onChangeText={(text) => handleChange('email', text)}
        placeholder="E-posta"
        hasLeadingIcon={true}
        leadingIcon={require('./icons/sms.png')}
        hasError={errors.email}
        hasSuccess={!errors.email && formData.email.length > 0}
      />
      
      <Input 
        type="password"
        value={formData.password}
        onChangeText={(text) => handleChange('password', text)}
        placeholder="Şifre"
        hasLeadingIcon={true}
        leadingIcon={require('./icons/lock.png')}
      />
      
      <Button text="Giriş Yap" onPress={handleSubmit} />
    </View>
  );
};

═══════════════════════════════════════════════════════════════════════════════
6️⃣ DARK MODE
═══════════════════════════════════════════════════════════════════════════════

Dark mode kullanımı için darkMode prop'unu true yapın:

// Light Mode
<Input 
  type="default"
  value={email}
  onChangeText={setEmail}
  placeholder="E-posta"
  darkMode={false}  // Varsayılan
/>

// Dark Mode
<Input 
  type="default"
  value={email}
  onChangeText={setEmail}
  placeholder="E-posta"
  darkMode={true}
/>

┌─────────────────────┬─────────────────────┬───────────────────────────────┐
│ State               │ Light Mode          │ Dark Mode                     │
├─────────────────────┼─────────────────────┼───────────────────────────────┤
│ Empty               │ White (#FFFFFF)     │ Gray/80 (#3C3E44)             │
│ Active              │ White (#FFFFFF)     │ Gray/90 (#303236)             │
│ Filled              │ White (#FFFFFF)     │ Gray/95 (#1A1B1E)             │
│ Text (Empty)        │ Gray/30 (#8E949F)   │ Gray/50 (#60646C)             │
│ Text (Filled)       │ Gray/60 (#54565F)   │ Gray/5 (#F4F4F6)              │
│ Icon                │ Gray/30 (#8E949F)   │ Gray/50 (#60646C)             │
└─────────────────────┴─────────────────────┴───────────────────────────────┘

═══════════════════════════════════════════════════════════════════════════════
7️⃣ VALİDATİON (HATA/BAŞARI)
═══════════════════════════════════════════════════════════════════════════════

╔═══════════════════════════════════════════════════════════════════════════╗
║ Email Validation Örneği                                                  ║
╚═══════════════════════════════════════════════════════════════════════════╝

const [email, setEmail] = useState('');
const [isValid, setIsValid] = useState(false);

const validateEmail = (text) => {
  const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
  setIsValid(emailRegex.test(text));
  setEmail(text);
};

<Input 
  type="default"
  value={email}
  onChangeText={validateEmail}
  placeholder="E-posta adresiniz"
  hasLeadingIcon={true}
  leadingIcon={require('./icons/sms.png')}
  hasError={email.length > 0 && !isValid}
  hasSuccess={isValid}
/>

{email.length > 0 && !isValid && (
  <Text style={{ color: '#FF3B30', fontSize: 12 }}>
    Geçerli bir e-posta adresi girin
  </Text>
)}


╔═══════════════════════════════════════════════════════════════════════════╗
║ Password Strength Örneği                                                 ║
╚═══════════════════════════════════════════════════════════════════════════╝

const [password, setPassword] = useState('');
const [strength, setStrength] = useState('');

const checkPasswordStrength = (text) => {
  setPassword(text);
  
  if (text.length < 6) {
    setStrength('weak');
  } else if (text.length < 10) {
    setStrength('medium');
  } else {
    setStrength('strong');
  }
};

<Input 
  type="password"
  value={password}
  onChangeText={checkPasswordStrength}
  placeholder="Şifreniz"
  hasLeadingIcon={true}
  leadingIcon={require('./icons/lock.png')}
  hasError={strength === 'weak'}
  hasSuccess={strength === 'strong'}
/>

<Text>Şifre Gücü: {strength}</Text>

═══════════════════════════════════════════════════════════════════════════════
8️⃣ ÖZELLEŞTİRME
═══════════════════════════════════════════════════════════════════════════════

╔═══════════════════════════════════════════════════════════════════════════╗
║ Container Stili Özelleştirme                                             ║
╚═══════════════════════════════════════════════════════════════════════════╝

<Input 
  type="default"
  value={email}
  onChangeText={setEmail}
  placeholder="E-posta"
  containerStyle={{
    backgroundColor: '#F0F0F0',
    borderRadius: 20,
    paddingHorizontal: 20,
  }}
/>


╔═══════════════════════════════════════════════════════════════════════════╗
║ Text Stili Özelleştirme                                                  ║
╚═══════════════════════════════════════════════════════════════════════════╝

<Input 
  type="default"
  value={email}
  onChangeText={setEmail}
  placeholder="E-posta"
  inputStyle={{
    fontSize: 18,
    fontWeight: 'bold',
    color: '#333',
  }}
/>


╔═══════════════════════════════════════════════════════════════════════════╗
║ Tam Genişlikte Input                                                     ║
╚═══════════════════════════════════════════════════════════════════════════╝

<Input 
  type="default"
  value={email}
  onChangeText={setEmail}
  placeholder="E-posta"
  containerStyle={{
    width: '100%',
  }}
/>

═══════════════════════════════════════════════════════════════════════════════
9️⃣ GEREKLİ İKONLAR
═══════════════════════════════════════════════════════════════════════════════

Input componenti için gerekli ikonlar:

📦 src/assets/images/icons/

┌─────────────────────────┬─────────────────────────────────────────────────┐
│ İkon Dosyası            │ Kullanım Alanı                                  │
├─────────────────────────┼─────────────────────────────────────────────────┤
│ sms.png                 │ Email input için leading icon                   │
│ lock.png                │ Password input için leading icon                │
│ eye.png                 │ Password göster (açık göz)                      │
│ eye-slash.png           │ Password gizle (kapalı göz)                     │
│ tick-circle.png         │ Success/validation ikonu                        │
│ arrow-down.png          │ Phone input ülke seçimi                         │
│ tick-square.png         │ Action button ikonu                             │
│ search.png              │ Search input için (opsiyonel)                   │
│ close.png               │ Clear input için (opsiyonel)                    │
└─────────────────────────┴─────────────────────────────────────────────────┘

NOT: Bu ikonları Figma'dan export edip projeye eklemeniz gerekiyor.

═══════════════════════════════════════════════════════════════════════════════
🎯 ÖRNEKLER - GERÇEK KULLANIM
═══════════════════════════════════════════════════════════════════════════════

╔═══════════════════════════════════════════════════════════════════════════╗
║ Login Ekranı                                                              ║
╚═══════════════════════════════════════════════════════════════════════════╝

import { View, Text, ScrollView } from 'react-native';
import { useState } from 'react';
import Input from './components/Input';
import Button from './components/Button';

const LoginScreen = () => {
  const [email, setEmail] = useState('');
  const [password, setPassword] = useState('');
  
  const handleLogin = () => {
    console.log('Login:', { email, password });
  };
  
  return (
    <ScrollView style={styles.container}>
      <Text style={styles.title}>Giriş Yap</Text>
      
      <Input 
        type="default"
        value={email}
        onChangeText={setEmail}
        placeholder="E-posta adresiniz"
        keyboardType="email-address"
        autoCapitalize="none"
        hasLeadingIcon={true}
        leadingIcon={require('./icons/sms.png')}
      />
      
      <Input 
        type="password"
        value={password}
        onChangeText={setPassword}
        placeholder="Şifreniz"
        hasLeadingIcon={true}
        leadingIcon={require('./icons/lock.png')}
        containerStyle={{ marginTop: 16 }}
      />
      
      <Button 
        text="Giriş Yap"
        onPress={handleLogin}
        containerStyle={{ marginTop: 24 }}
      />
    </ScrollView>
  );
};


╔═══════════════════════════════════════════════════════════════════════════╗
║ Kayıt Ekranı (Phone Verification)                                        ║
╚═══════════════════════════════════════════════════════════════════════════╝

const RegisterScreen = () => {
  const [phone, setPhone] = useState('');
  const [code, setCode] = useState('');
  const [isCodeSent, setIsCodeSent] = useState(false);
  
  const handleSendCode = () => {
    console.log('Send code to:', phone);
    setIsCodeSent(true);
  };
  
  return (
    <View style={styles.container}>
      <Text style={styles.title}>Telefon Doğrulama</Text>
      
      <Input 
        type="phone"
        value={phone}
        onChangeText={setPhone}
        placeholder="Telefon numaranız"
        countryCode="+90"
        countryFlag={require('./flags/tr.png')}
        phonePrefix="+90"
      />
      
      {isCodeSent && (
        <Input 
          type="default"
          value={code}
          onChangeText={setCode}
          placeholder="Doğrulama kodu"
          keyboardType="number-pad"
          maxLength={6}
          containerStyle={{ marginTop: 16 }}
        />
      )}
      
      <Button 
        text={isCodeSent ? 'Doğrula' : 'Kod Gönder'}
        onPress={handleSendCode}
        containerStyle={{ marginTop: 24 }}
      />
    </View>
  );
};

═══════════════════════════════════════════════════════════════════════════════
📝 NOTLAR
═══════════════════════════════════════════════════════════════════════════════

1. ✅ Tüm input tipleri responsive tasarıma sahiptir (react-native-size-matters)
2. ✅ Dark mode otomatik olarak desteklenir
3. ✅ Shadow/elevation otomatik uygulanır
4. ✅ Focus/blur durumları otomatik yönetilir
5. ✅ Password visibility toggle otomatik çalışır
6. ⚠️  İkonları Figma'dan export edip projeye eklemeniz gerekiyor
7. ⚠️  Phone input için ülke seçim modali kendiniz implement etmelisiniz
8. ⚠️  OTP inputları için ref yönetimi yapmanız gerekiyor

═══════════════════════════════════════════════════════════════════════════════
Son güncelleme: Ekim 2025
Versiyon: 1.0.0
═══════════════════════════════════════════════════════════════════════════════

